<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hurst Systems</title>
    <link>https://hurst.systems/</link>
    <description>Recent content on Hurst Systems</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Oct 2018 10:29:23 -0500</lastBuildDate>
    
	<atom:link href="https://hurst.systems/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PowerShell - Error Handling</title>
      <link>https://hurst.systems/posts/powershell-error-handling/</link>
      <pubDate>Tue, 23 Oct 2018 10:29:23 -0500</pubDate>
      
      <guid>https://hurst.systems/posts/powershell-error-handling/</guid>
      <description>PowerShell - Error Handling Try Catch and Finally
Try When we need to watch a block of our code for errors, our new best friend is the try statement. Ever dillagent, try knows the danger that looms and is looking out for you when a &amp;ldquo;terminating&amp;rdquo; error occurs.
We can also tell try to be on the lookout for other types of errors, those errrors that don&amp;rsquo;t stop the function in its tracks (also known as Non-Terminating), but may cause problems later in our code because this function was unable to be successfully executed.</description>
    </item>
    
    <item>
      <title>TroubleShooting a Users HomeDrive Auto-Remapping</title>
      <link>https://hurst.systems/posts/troubleshooting-homedrive-remapping/</link>
      <pubDate>Wed, 17 Apr 2019 19:29:23 -0500</pubDate>
      
      <guid>https://hurst.systems/posts/troubleshooting-homedrive-remapping/</guid>
      <description>We had a select few new users that would have their &amp;lsquo;HomeDrive&amp;rsquo; set to N:\ in Active Directory, but the drive letter would be Z:\ when they logged into their machine.
The Desktop Team would remap it within windows back to N:\ but upon logging out and back in again, the drive letter would revert back to Z:
I scoured the (local and global) GPO&amp;rsquo;s to make absolutely sure that nothing was remapping the HomeDrive.</description>
    </item>
    
    <item>
      <title>Dot-Sourcing in PowerShell</title>
      <link>https://hurst.systems/posts/powershell-dot-sourcing/</link>
      <pubDate>Tue, 20 Nov 2018 14:53:23 -0500</pubDate>
      
      <guid>https://hurst.systems/posts/powershell-dot-sourcing/</guid>
      <description>Dot Sourcing in PowerShell Introduction When writing PowerShell scripts, the best practice is to keep your scripts as simple as possible.
Scripts and functions should do one &amp;ldquo;thing.&amp;rdquo; (multiple VSCode windows?) This helps with troubleshooting since the function is small and does just one thing, and allows for any enhancements to the function we create in the future to be automatically available to every script in which we have used that function.</description>
    </item>
    
    <item>
      <title>Present Working Directory</title>
      <link>https://hurst.systems/posts/powershell-present-working-directory/understanding-present-working-directory-pwd/</link>
      <pubDate>Tue, 20 Nov 2018 14:53:23 -0500</pubDate>
      
      <guid>https://hurst.systems/posts/powershell-present-working-directory/understanding-present-working-directory-pwd/</guid>
      <description>Understanding your location - ($pwd / Get-Location) $pwd is an automatic variable which contains PowerShell&amp;rsquo;s current location. $pwd, which stands for &amp;ldquo;print working directory&amp;rdquo;, and functions like the PowerShell command &amp;ldquo;Get-Location&amp;rdquo;.
You may see me refer to $pwd as &amp;ldquo;Present Working Directory&amp;rdquo; because it also fits the abbreviation and it was always easier for me to remember its function.
VSCode VSCode sets the $pwd (&amp;ldquo;present working directory‚Äù) to the current Workspace location</description>
    </item>
    
    <item>
      <title>Understanding Paths in PowerShell</title>
      <link>https://hurst.systems/posts/powershell-understanding-paths/</link>
      <pubDate>Tue, 20 Nov 2018 14:53:23 -0500</pubDate>
      
      <guid>https://hurst.systems/posts/powershell-understanding-paths/</guid>
      <description>Understanding Paths in PowerShell Absolute and Relative Paths By default, the ‚Äúpresent working directory‚Äù is not on the PATH by default. This means that you must use relative or absolute paths when specifying a script to run, or when sourcing one script from within another.
The all-important Paths 2 different types of Paths Relative and Absolute
Absolute Path: Like having the ‚ÄúCountry, State, City, Street address, floor, room, toolbox, bottom shelf, right side‚Äù for directions to where the hammer is located.</description>
    </item>
    
    <item>
      <title>PowerShell Notes</title>
      <link>https://hurst.systems/posts/powershell-notes/</link>
      <pubDate>Thu, 04 Oct 2018 11:29:23 -0500</pubDate>
      
      <guid>https://hurst.systems/posts/powershell-notes/</guid>
      <description>Notes about various things that I wanted to find again later, or a few things that would be useful to others. From &amp;ldquo;Free eBooks&amp;rdquo; to links about HashTables and Arrays, there will not be any rhyme or reason to this post. Enjoy.
Free eBooks: Historical Trend Reports in Powershell
Where and Foreach Methods
PowerShell Advanced Functions
Kevin Marquette on PowerShell Theory
================
Automatically Store Last Output
================
Hashtables Everything you wanted to know about HashTables</description>
    </item>
    
    <item>
      <title>PowerShell - Pester Notes</title>
      <link>https://hurst.systems/posts/powershell-pester-notes/</link>
      <pubDate>Sun, 23 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hurst.systems/posts/powershell-pester-notes/</guid>
      <description>Pester Time to learn Pester. Not so much a blog post as it is a reading/reference list.
What is Pester? &amp;ldquo;Pester is the ubiquitous test and mock framework for PowerShell&amp;rdquo; or in other words, tests written to test the functions you have created without actually running those commands.
Are you asking yourself &amp;ldquo;why bother? just run the code and see if it works?&amp;rdquo; Yeah me too, but seems like everyone is doing it&amp;hellip; so might as well jump off a bridge also, hopefully by the end I will see its value.</description>
    </item>
    
    <item>
      <title>PowerShell - Adding WhatIf and Confirm</title>
      <link>https://hurst.systems/posts/powershell-adding-whatif-and-confirm/</link>
      <pubDate>Thu, 23 Aug 2018 10:29:23 -0500</pubDate>
      
      <guid>https://hurst.systems/posts/powershell-adding-whatif-and-confirm/</guid>
      <description>So I planned to write a blog post about how to add WhatIf and Confirm to your PowerShell code and began to do research on the topic. I found that a bunch of awesome blogs that already had covered this topic, so I grabbed some information about each and threw it into this post. I will clean this up and make it more readable at a later time, just wanted to get this into my site so that I could find it and use it when needed.</description>
    </item>
    
    <item>
      <title>PowerShell - Advanced Functions</title>
      <link>https://hurst.systems/posts/powershell-advanced-functions/</link>
      <pubDate>Fri, 03 Aug 2018 10:29:23 -0500</pubDate>
      
      <guid>https://hurst.systems/posts/powershell-advanced-functions/</guid>
      <description>Advanced Functions when giving a default parameter use
1 2 3 4 5 6 7  [ValidateNotNullOrEmpty()] [CmdletBinding()] param ( [ValidateNotNullOrEmpty()] [string[] ] $Computername = $env:COMPUTERNAME )   Standard and Advanced Functions
PowerShell Advanced Functions: Can we build them better? With parameter validation, yes we can!
About Functions Advanced on PSCore
About Functions Advanced Methods
About Functions Advanced Parameters
Which leads to learning how to use Plaster What is Plaster</description>
    </item>
    
    <item>
      <title>Add Twitter Cards to Blog Tweets</title>
      <link>https://hurst.systems/posts/twittercards/</link>
      <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://hurst.systems/posts/twittercards/</guid>
      <description>I&amp;rsquo;m really late to the blog game, and never really did much but lurk on Twitter. So when I started to blog, and then promoted the posts on Twitter, I noticed it was just an ugly URL link. It didn&amp;rsquo;t stand out at all, in fact it was&amp;hellip; boring&amp;hellip; and this was BEFORE you got to my rambling. So how do all these Tweets end up with such pretty pictures attached to them?</description>
    </item>
    
    <item>
      <title>The Adventure Begins</title>
      <link>https://hurst.systems/posts/the-adventure-begins/</link>
      <pubDate>Tue, 10 Jul 2018 10:29:23 -0500</pubDate>
      
      <guid>https://hurst.systems/posts/the-adventure-begins/</guid>
      <description>The Adventure Begins In the beginning&amp;hellip; This blog is probably well over due, if for no other reason than just keeping track of the things I learn in PowerShell so that I don&amp;rsquo;t forget them later. This &amp;ldquo;blog&amp;rdquo; might even work great in keeping track of those little details that make different commands work..just so&amp;hellip; I might even remember that I wrote down those little gotchas in a place to remind myself.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://hurst.systems/404/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hurst.systems/404/</guid>
      <description> Error 404: Page Not Found It seems that the page that you&amp;rsquo;re trying to access doesn&amp;rsquo;t exist. üòü If you&amp;rsquo;re sure that it exists, chances are it might have been moved to a new link! You may search for it on the home page. </description>
    </item>
    
    <item>
      <title></title>
      <link>https://hurst.systems/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hurst.systems/about/</guid>
      <description>Just the typical about me page 
Published videos List of videos I have created: TechSnips





Published Blog Posts on other websites:
How to Managed Distributed File System (DFS) Links with PowerShell
Find out more about Scott:
Twitter
LinkedIn
GitHub
Email</description>
    </item>
    
  </channel>
</rss>